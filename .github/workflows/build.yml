name: Build Universal macOS App

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-14

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'

    - name: Clean and prepare
      run: |
        echo "Current directory structure:"
        ls -la
        echo "Looking for Xcode project:"
        find . -name "*.xcodeproj" -type d
        echo "Cleaning project..."
        xcodebuild clean -project tray-lang.xcodeproj -scheme tray-lang
        echo "Project structure:"
        ls -la tray-lang/

    - name: Build for Intel
      run: |
        echo "Building for Intel architecture..."
        xcodebuild -project tray-lang.xcodeproj -scheme tray-lang -configuration Release -destination 'platform=macOS,arch=x86_64' build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        mkdir -p build/Release
        echo "Looking for built app..."
        find . -name "tray-lang.app" -type d
        find ~/Library/Developer/Xcode/DerivedData -name "tray-lang.app" -type d
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "tray-lang.app" -type d | head -1)
        echo "Found app at: $APP_PATH"
        if [ -n "$APP_PATH" ]; then
          cp -r "$APP_PATH" build/Release/tray-lang-intel.app
          echo "Copied to build/Release/tray-lang-intel.app"
        else
          echo "ERROR: Could not find tray-lang.app"
          exit 1
        fi
        echo "Intel build completed"

    - name: Build for Apple Silicon
      run: |
        echo "Building for Apple Silicon architecture..."
        xcodebuild -project tray-lang.xcodeproj -scheme tray-lang -configuration Release -destination 'platform=macOS,arch=arm64' build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        mkdir -p build/Release
        echo "Looking for built app..."
        find . -name "tray-lang.app" -type d
        find ~/Library/Developer/Xcode/DerivedData -name "tray-lang.app" -type d
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "tray-lang.app" -type d | head -1)
        echo "Found app at: $APP_PATH"
        if [ -n "$APP_PATH" ]; then
          cp -r "$APP_PATH" build/Release/tray-lang-arm64.app
          echo "Copied to build/Release/tray-lang-arm64.app"
        else
          echo "ERROR: Could not find tray-lang.app"
          exit 1
        fi
        echo "Apple Silicon build completed"

    - name: Create Universal Binary
      run: |
        # Create universal binary using lipo
        lipo -create build/Release/tray-lang-intel.app/Contents/MacOS/tray-lang build/Release/tray-lang-arm64.app/Contents/MacOS/tray-lang -output build/Release/tray-lang-universal
        
        # Copy the universal binary to the Intel app
        cp build/Release/tray-lang-universal build/Release/tray-lang-intel.app/Contents/MacOS/tray-lang
        
        # Create final universal app
        cp -r build/Release/tray-lang-intel.app build/Release/tray-lang-universal.app
        
        # List build artifacts
        ls -la build/Release/

    - name: Get version from project
      run: |
        VERSION=$(xcodebuild -project tray-lang.xcodeproj -showBuildSettings | grep "MARKETING_VERSION" | awk '{print $3}')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Building version: $VERSION"

    - name: Create signing script
      run: |
        cat > build/Release/sign-app.applescript << 'EOF'
        display dialog "Tray Lang - Application Signing Script" & return & return & "This script will install and sign the application." buttons {"Cancel", "Install"} default button "Install" with icon note
        
        set appName to "tray-lang-universal.app"
        set appsPath to "/Applications/"
        set fullAppPath to appsPath & appName
        
        try
            set currentDir to (path to desktop folder as text) & "tray-lang-universal.app"
            if not (exists file currentDir) then
                display dialog "ERROR: tray-lang-universal.app not found in current directory." & return & return & "Please make sure you're running this script from the DMG mount point." buttons {"OK"} default button "OK" with icon stop
                return
            end if
            
            do shell script "chmod +x " & quoted form of POSIX path of currentDir
            do shell script "xattr -cr " & quoted form of POSIX path of currentDir
            do shell script "codesign --force --deep --sign - " & quoted form of POSIX path of currentDir
            do shell script "codesign -dv " & quoted form of POSIX path of currentDir
            do shell script "cp -r " & quoted form of POSIX path of currentDir & " " & quoted form of appsPath
            do shell script "chmod +x " & quoted form of fullAppPath
            do shell script "xattr -cr " & quoted form of fullAppPath
            do shell script "codesign --force --deep --sign - " & quoted form of fullAppPath
            do shell script "codesign -dv " & quoted form of fullAppPath
            
            display dialog "Installation completed successfully!" & return & return & "The app is now installed in /Applications/tray-lang-universal.app" & return & return & "Don't forget to grant accessibility permissions in System Preferences!" buttons {"OK"} default button "OK" with icon note
            
            set openPrefs to button returned of (display dialog "Would you like to open System Preferences to grant accessibility permissions?" buttons {"No", "Yes"} default button "Yes")
            if openPrefs is "Yes" then
                tell application "System Preferences"
                    activate
                end tell
            end if
            
        on error errMsg
            display dialog "Error during installation: " & errMsg buttons {"OK"} default button "OK" with icon stop
        end try
        EOF
        
        cat > build/Release/sign-app.sh << 'EOF'
        #!/bin/bash
        # Wrapper script to run AppleScript
        
        echo "Running Tray Lang Installation Script..."
        osascript "$(dirname "$0")/sign-app.applescript"
        EOF
        
        chmod +x build/Release/sign-app.sh

    - name: Create DMG
      run: |
        # Install create-dmg if not available
        if ! command -v create-dmg &> /dev/null; then
          brew install create-dmg
        fi
        
        # Copy README to build directory
        cp README.md build/Release/
        
        # Create DMG with app, README and signing script
        create-dmg \
          --volname "Tray Lang v$VERSION" \
          --window-pos 200 120 \
          --window-size 800 500 \
          --icon-size 100 \
          --icon "tray-lang-universal.app" 175 120 \
          --hide-extension "tray-lang-universal.app" \
          --app-drop-link 175 300 \
          "build/Release/Tray-Lang-v$VERSION-Universal.dmg" \
          "build/Release/"



    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        name: Tray Lang v${{ env.VERSION }}
        body: |
          ## Tray Lang v${{ env.VERSION }}
          
          ### Installation
          1. Download and mount the DMG
          2. Run the signing script: `./sign-app.sh`
          3. The app will be automatically installed to Applications folder
          4. Grant accessibility permissions on first launch
          
          ### Files Included
          - `tray-lang-universal.app` - Universal macOS application
          - `README.md` - Installation and usage instructions
          - `sign-app.sh` - AppleScript-based installation script
          
          ### System Requirements
          - macOS 14.0 or higher
          - Intel or Apple Silicon Mac
        files: |
          build/Release/Tray-Lang-v${{ env.VERSION }}-Universal.dmg
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
